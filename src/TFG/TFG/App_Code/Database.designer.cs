#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TFG.App_Code
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertEvento(Evento instance);
    partial void UpdateEvento(Evento instance);
    partial void DeleteEvento(Evento instance);
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertNota(Nota instance);
    partial void UpdateNota(Nota instance);
    partial void DeleteNota(Nota instance);
    partial void InsertCalendario(Calendario instance);
    partial void UpdateCalendario(Calendario instance);
    partial void DeleteCalendario(Calendario instance);
    partial void InsertUsuarioAmigo(UsuarioAmigo instance);
    partial void UpdateUsuarioAmigo(UsuarioAmigo instance);
    partial void DeleteUsuarioAmigo(UsuarioAmigo instance);
    partial void InsertBaneo(Baneo instance);
    partial void UpdateBaneo(Baneo instance);
    partial void DeleteBaneo(Baneo instance);
    partial void InsertGrupo(Grupo instance);
    partial void UpdateGrupo(Grupo instance);
    partial void DeleteGrupo(Grupo instance);
    partial void InsertChat(Chat instance);
    partial void UpdateChat(Chat instance);
    partial void DeleteChat(Chat instance);
    partial void InsertEventoSuspendido(EventoSuspendido instance);
    partial void UpdateEventoSuspendido(EventoSuspendido instance);
    partial void DeleteEventoSuspendido(EventoSuspendido instance);
    partial void InsertMensaje(Mensaje instance);
    partial void UpdateMensaje(Mensaje instance);
    partial void DeleteMensaje(Mensaje instance);
    partial void InsertTblero(Tblero instance);
    partial void UpdateTblero(Tblero instance);
    partial void DeleteTblero(Tblero instance);
    partial void InsertListaGrupo(ListaGrupo instance);
    partial void UpdateListaGrupo(ListaGrupo instance);
    partial void DeleteListaGrupo(ListaGrupo instance);
    #endregion
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Evento> Evento
		{
			get
			{
				return this.GetTable<Evento>();
			}
		}
		
		public System.Data.Linq.Table<Administrador> Administrador
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<Nota> Nota
		{
			get
			{
				return this.GetTable<Nota>();
			}
		}
		
		public System.Data.Linq.Table<Calendario> Calendario
		{
			get
			{
				return this.GetTable<Calendario>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioAmigo> UsuarioAmigo
		{
			get
			{
				return this.GetTable<UsuarioAmigo>();
			}
		}
		
		public System.Data.Linq.Table<Baneo> Baneo
		{
			get
			{
				return this.GetTable<Baneo>();
			}
		}
		
		public System.Data.Linq.Table<Grupo> Grupo
		{
			get
			{
				return this.GetTable<Grupo>();
			}
		}
		
		public System.Data.Linq.Table<Chat> Chat
		{
			get
			{
				return this.GetTable<Chat>();
			}
		}
		
		public System.Data.Linq.Table<EventoSuspendido> EventoSuspendido
		{
			get
			{
				return this.GetTable<EventoSuspendido>();
			}
		}
		
		public System.Data.Linq.Table<Mensaje> Mensaje
		{
			get
			{
				return this.GetTable<Mensaje>();
			}
		}
		
		public System.Data.Linq.Table<Tblero> Tblero
		{
			get
			{
				return this.GetTable<Tblero>();
			}
		}
		
		public System.Data.Linq.Table<ListaGrupo> ListaGrupo
		{
			get
			{
				return this.GetTable<ListaGrupo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nombreUsuario;
		
		private string _Property1;
		
		private string _password;
		
		private string _foto;
		
		private string _notificacion;
		
		private string _fechaUnion;
		
		private EntitySet<Evento> _Evento;
		
		private EntitySet<Nota> _Nota;
		
		private EntitySet<UsuarioAmigo> _UsuarioAmigo;
		
		private EntityRef<Grupo> _Grupo;
		
		private EntitySet<Mensaje> _Mensaje;
		
		private EntityRef<UsuarioAmigo> _UsuarioAmigo1;
		
		private EntityRef<Baneo> _Baneos;
		
		private EntityRef<Calendario> _Calendarios;
		
		private EntityRef<ListaGrupo> _ListaGrupp;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfotoChanging(string value);
    partial void OnfotoChanged();
    partial void OnnotificacionChanging(string value);
    partial void OnnotificacionChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Usuario()
		{
			this._Evento = new EntitySet<Evento>(new Action<Evento>(this.attach_Evento), new Action<Evento>(this.detach_Evento));
			this._Nota = new EntitySet<Nota>(new Action<Nota>(this.attach_Nota), new Action<Nota>(this.detach_Nota));
			this._UsuarioAmigo = new EntitySet<UsuarioAmigo>(new Action<UsuarioAmigo>(this.attach_UsuarioAmigo), new Action<UsuarioAmigo>(this.detach_UsuarioAmigo));
			this._Grupo = default(EntityRef<Grupo>);
			this._Mensaje = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensaje), new Action<Mensaje>(this.detach_Mensaje));
			this._UsuarioAmigo1 = default(EntityRef<UsuarioAmigo>);
			this._Baneos = default(EntityRef<Baneo>);
			this._Calendarios = default(EntityRef<Calendario>);
			this._ListaGrupp = default(EntityRef<ListaGrupo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", CanBeNull=false, IsPrimaryKey=true)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					if ((((this._UsuarioAmigo1.HasLoadedOrAssignedValue || this._Baneos.HasLoadedOrAssignedValue) 
								|| this._Calendarios.HasLoadedOrAssignedValue) 
								|| this._ListaGrupp.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Property1", Storage="_Property1", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._Property1;
			}
			set
			{
				if ((this._Property1 != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._Property1 = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto")]
		public string foto
		{
			get
			{
				return this._foto;
			}
			set
			{
				if ((this._foto != value))
				{
					this.OnfotoChanging(value);
					this.SendPropertyChanging();
					this._foto = value;
					this.SendPropertyChanged("foto");
					this.OnfotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificacion", CanBeNull=false)]
		public string notificacion
		{
			get
			{
				return this._notificacion;
			}
			set
			{
				if ((this._notificacion != value))
				{
					this.OnnotificacionChanging(value);
					this.SendPropertyChanging();
					this._notificacion = value;
					this.SendPropertyChanged("notificacion");
					this.OnnotificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fechaUnion", Storage="_fechaUnion", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._fechaUnion;
			}
			set
			{
				if ((this._fechaUnion != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._fechaUnion = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Evento", Storage="_Evento", ThisKey="nombreUsuario", OtherKey="nombreUsuario")]
		public EntitySet<Evento> Evento
		{
			get
			{
				return this._Evento;
			}
			set
			{
				this._Evento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Nota", Storage="_Nota", ThisKey="nombreUsuario", OtherKey="nombreUsuario")]
		public EntitySet<Nota> Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				this._Nota.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioAmigo", Storage="_UsuarioAmigo", ThisKey="nombreUsuario", OtherKey="amigo")]
		public EntitySet<UsuarioAmigo> UsuarioAmigo
		{
			get
			{
				return this._UsuarioAmigo;
			}
			set
			{
				this._UsuarioAmigo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Grupo", Storage="_Grupo", ThisKey="nombreUsuario", OtherKey="UsuarioCreador", IsUnique=true, IsForeignKey=false)]
		public Grupo Grupo
		{
			get
			{
				return this._Grupo.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo.Entity = null;
						previousValue.Usuario = null;
					}
					this._Grupo.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
					}
					this.SendPropertyChanged("Grupo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje", Storage="_Mensaje", ThisKey="nombreUsuario", OtherKey="usuarioOrigen")]
		public EntitySet<Mensaje> Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				this._Mensaje.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioAmigo_Usuario", Storage="_UsuarioAmigo1", ThisKey="nombreUsuario", OtherKey="nombreUsuario", IsForeignKey=true)]
		public UsuarioAmigo UsuarioAmigo1
		{
			get
			{
				return this._UsuarioAmigo1.Entity;
			}
			set
			{
				UsuarioAmigo previousValue = this._UsuarioAmigo1.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioAmigo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioAmigo1.Entity = null;
						previousValue.Usuario1.Remove(this);
					}
					this._UsuarioAmigo1.Entity = value;
					if ((value != null))
					{
						value.Usuario1.Add(this);
						this._nombreUsuario = value.nombreUsuario;
					}
					else
					{
						this._nombreUsuario = default(string);
					}
					this.SendPropertyChanged("UsuarioAmigo1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baneo_Usuario", Storage="_Baneos", ThisKey="nombreUsuario", OtherKey="baneado", IsForeignKey=true)]
		public Baneo Baneo
		{
			get
			{
				return this._Baneos.Entity;
			}
			set
			{
				Baneo previousValue = this._Baneos.Entity;
				if (((previousValue != value) 
							|| (this._Baneos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Baneos.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Baneos.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._nombreUsuario = value.baneado;
					}
					else
					{
						this._nombreUsuario = default(string);
					}
					this.SendPropertyChanged("Baneo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendario_Usuario", Storage="_Calendarios", ThisKey="nombreUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Calendario Calendario
		{
			get
			{
				return this._Calendarios.Entity;
			}
			set
			{
				Calendario previousValue = this._Calendarios.Entity;
				if (((previousValue != value) 
							|| (this._Calendarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Calendarios.Entity = null;
						previousValue.Usuario1.Remove(this);
					}
					this._Calendarios.Entity = value;
					if ((value != null))
					{
						value.Usuario1.Add(this);
						this._nombreUsuario = value.idUsuario;
					}
					else
					{
						this._nombreUsuario = default(string);
					}
					this.SendPropertyChanged("Calendario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ListaGrupo_Usuario", Storage="_ListaGrupp", ThisKey="nombreUsuario", OtherKey="usuario", IsForeignKey=true)]
		public ListaGrupo ListaGrupo
		{
			get
			{
				return this._ListaGrupp.Entity;
			}
			set
			{
				ListaGrupo previousValue = this._ListaGrupp.Entity;
				if (((previousValue != value) 
							|| (this._ListaGrupp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ListaGrupp.Entity = null;
						previousValue.Usuario1.Remove(this);
					}
					this._ListaGrupp.Entity = value;
					if ((value != null))
					{
						value.Usuario1.Add(this);
						this._nombreUsuario = value.usuario;
					}
					else
					{
						this._nombreUsuario = default(string);
					}
					this.SendPropertyChanged("ListaGrupo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evento(Evento entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Evento(Evento entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Nota(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Nota(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_UsuarioAmigo(UsuarioAmigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_UsuarioAmigo(UsuarioAmigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Evento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _descripcion;
		
		private string _direccion;
		
		private System.TimeSpan _horaInicio;
		
		private System.TimeSpan _horaFin;
		
		private System.DateTime _fecha;
		
		private int _prioridad;
		
		private string _visibilidad;
		
		private string _nombreUsuario;
		
		private string _fechaCreacion;
		
		private EntityRef<Calendario> _Calendarios;
		
		private EntityRef<EventoSuspendido> _EventoSuspendido;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnhoraInicioChanging(System.TimeSpan value);
    partial void OnhoraInicioChanged();
    partial void OnhoraFinChanging(System.TimeSpan value);
    partial void OnhoraFinChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnprioridadChanging(int value);
    partial void OnprioridadChanged();
    partial void OnvisibilidadChanging(string value);
    partial void OnvisibilidadChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Evento()
		{
			this._Calendarios = default(EntityRef<Calendario>);
			this._EventoSuspendido = default(EntityRef<EventoSuspendido>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((this._Calendarios.HasLoadedOrAssignedValue || this._EventoSuspendido.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion")]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_horaInicio")]
		public System.TimeSpan horaInicio
		{
			get
			{
				return this._horaInicio;
			}
			set
			{
				if ((this._horaInicio != value))
				{
					this.OnhoraInicioChanging(value);
					this.SendPropertyChanging();
					this._horaInicio = value;
					this.SendPropertyChanged("horaInicio");
					this.OnhoraInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_horaFin")]
		public System.TimeSpan horaFin
		{
			get
			{
				return this._horaFin;
			}
			set
			{
				if ((this._horaFin != value))
				{
					this.OnhoraFinChanging(value);
					this.SendPropertyChanging();
					this._horaFin = value;
					this.SendPropertyChanged("horaFin");
					this.OnhoraFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prioridad")]
		public int prioridad
		{
			get
			{
				return this._prioridad;
			}
			set
			{
				if ((this._prioridad != value))
				{
					this.OnprioridadChanging(value);
					this.SendPropertyChanging();
					this._prioridad = value;
					this.SendPropertyChanged("prioridad");
					this.OnprioridadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visibilidad", CanBeNull=false)]
		public string visibilidad
		{
			get
			{
				return this._visibilidad;
			}
			set
			{
				if ((this._visibilidad != value))
				{
					this.OnvisibilidadChanging(value);
					this.SendPropertyChanging();
					this._visibilidad = value;
					this.SendPropertyChanged("visibilidad");
					this.OnvisibilidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fechaCreacion", Storage="_fechaCreacion", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendario_Evento", Storage="_Calendarios", ThisKey="id", OtherKey="idEvento", IsForeignKey=true)]
		public Calendario Calendario
		{
			get
			{
				return this._Calendarios.Entity;
			}
			set
			{
				Calendario previousValue = this._Calendarios.Entity;
				if (((previousValue != value) 
							|| (this._Calendarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Calendarios.Entity = null;
						previousValue.Evento1.Remove(this);
					}
					this._Calendarios.Entity = value;
					if ((value != null))
					{
						value.Evento1.Add(this);
						this._id = value.idEvento;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Calendario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventoSuspendido_Evento", Storage="_EventoSuspendido", ThisKey="id", OtherKey="evento", IsForeignKey=true)]
		public EventoSuspendido EventoSuspendido
		{
			get
			{
				return this._EventoSuspendido.Entity;
			}
			set
			{
				EventoSuspendido previousValue = this._EventoSuspendido.Entity;
				if (((previousValue != value) 
							|| (this._EventoSuspendido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventoSuspendido.Entity = null;
						previousValue.Evento1.Remove(this);
					}
					this._EventoSuspendido.Entity = value;
					if ((value != null))
					{
						value.Evento1.Add(this);
						this._id = value.evento;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("EventoSuspendido");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Evento", Storage="_Usuario", ThisKey="nombreUsuario", OtherKey="nombreUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Evento.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Evento.Add(this);
						this._nombreUsuario = value.nombreUsuario;
					}
					else
					{
						this._nombreUsuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nombre;
		
		private string _dni;
		
		private string _correo;
		
		private string _password;
		
		private string _fechaUnion;
		
		private EntityRef<Baneo> _Baneos;
		
		private EntityRef<EventoSuspendido> _EventoSuspendido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndniChanging(string value);
    partial void OndniChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Administrador()
		{
			this._Baneos = default(EntityRef<Baneo>);
			this._EventoSuspendido = default(EntityRef<EventoSuspendido>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", CanBeNull=false, IsPrimaryKey=true)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					if ((this._Baneos.HasLoadedOrAssignedValue || this._EventoSuspendido.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", CanBeNull=false, IsPrimaryKey=true)]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this.OndniChanging(value);
					this.SendPropertyChanging();
					this._dni = value;
					this.SendPropertyChanged("dni");
					this.OndniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fechaUnion", Storage="_fechaUnion", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._fechaUnion;
			}
			set
			{
				if ((this._fechaUnion != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._fechaUnion = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baneo_Administrador", Storage="_Baneos", ThisKey="nombre", OtherKey="Administrador", IsForeignKey=true)]
		public Baneo Baneo
		{
			get
			{
				return this._Baneos.Entity;
			}
			set
			{
				Baneo previousValue = this._Baneos.Entity;
				if (((previousValue != value) 
							|| (this._Baneos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Baneos.Entity = null;
						previousValue.Administrador1.Remove(this);
					}
					this._Baneos.Entity = value;
					if ((value != null))
					{
						value.Administrador1.Add(this);
						this._nombre = value.Administrador;
					}
					else
					{
						this._nombre = default(string);
					}
					this.SendPropertyChanged("Baneo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventoSuspendido_Administrador", Storage="_EventoSuspendido", ThisKey="nombre", OtherKey="Administrador", IsForeignKey=true)]
		public EventoSuspendido EventoSuspendido
		{
			get
			{
				return this._EventoSuspendido.Entity;
			}
			set
			{
				EventoSuspendido previousValue = this._EventoSuspendido.Entity;
				if (((previousValue != value) 
							|| (this._EventoSuspendido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventoSuspendido.Entity = null;
						previousValue.Administrador1.Remove(this);
					}
					this._EventoSuspendido.Entity = value;
					if ((value != null))
					{
						value.Administrador1.Add(this);
						this._nombre = value.Administrador;
					}
					else
					{
						this._nombre = default(string);
					}
					this.SendPropertyChanged("EventoSuspendido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Nota : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _titulo;
		
		private string _texto;
		
		private string _nombreUsuario;
		
		private string _fechaCreacion;
		
		private string _fechaTope;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Tblero> _Tblero;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OntextoChanging(string value);
    partial void OntextoChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnfechaTopeChanging(string value);
    partial void OnfechaTopeChanged();
    #endregion
		
		public Nota()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Tblero = default(EntityRef<Tblero>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Tblero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", CanBeNull=false)]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_texto", CanBeNull=false)]
		public string texto
		{
			get
			{
				return this._texto;
			}
			set
			{
				if ((this._texto != value))
				{
					this.OntextoChanging(value);
					this.SendPropertyChanging();
					this._texto = value;
					this.SendPropertyChanged("texto");
					this.OntextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fechaCreacion", Storage="_fechaCreacion", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaTope", CanBeNull=false)]
		public string fechaTope
		{
			get
			{
				return this._fechaTope;
			}
			set
			{
				if ((this._fechaTope != value))
				{
					this.OnfechaTopeChanging(value);
					this.SendPropertyChanging();
					this._fechaTope = value;
					this.SendPropertyChanged("fechaTope");
					this.OnfechaTopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Nota", Storage="_Usuario", ThisKey="nombreUsuario", OtherKey="nombreUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Nota.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Nota.Add(this);
						this._nombreUsuario = value.nombreUsuario;
					}
					else
					{
						this._nombreUsuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tblero_Nota", Storage="_Tblero", ThisKey="id", OtherKey="nota", IsForeignKey=true)]
		public Tblero Tblero
		{
			get
			{
				return this._Tblero.Entity;
			}
			set
			{
				Tblero previousValue = this._Tblero.Entity;
				if (((previousValue != value) 
							|| (this._Tblero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblero.Entity = null;
						previousValue.Nota1.Remove(this);
					}
					this._Tblero.Entity = value;
					if ((value != null))
					{
						value.Nota1.Add(this);
						this._id = value.nota;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Tblero");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Calendario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _usuario;
		
		private int _evento;
		
		private string _id;
		
		private string _CreateDate;
		
		private EntitySet<Usuario> _Usuario1;
		
		private EntitySet<Evento> _Evento1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(string value);
    partial void OnidUsuarioChanged();
    partial void OnidEventoChanging(int value);
    partial void OnidEventoChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Calendario()
		{
			this._Usuario1 = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario1), new Action<Usuario>(this.detach_Usuario1));
			this._Evento1 = new EntitySet<Evento>(new Action<Evento>(this.attach_Evento1), new Action<Evento>(this.detach_Evento1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usuario", Storage="_usuario", CanBeNull=false, IsPrimaryKey=true)]
		public string idUsuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="evento", Storage="_evento", IsPrimaryKey=true)]
		public int idEvento
		{
			get
			{
				return this._evento;
			}
			set
			{
				if ((this._evento != value))
				{
					this.OnidEventoChanging(value);
					this.SendPropertyChanging();
					this._evento = value;
					this.SendPropertyChanged("idEvento");
					this.OnidEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendario_Usuario", Storage="_Usuario1", ThisKey="idUsuario", OtherKey="nombreUsuario")]
		public EntitySet<Usuario> Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				this._Usuario1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calendario_Evento", Storage="_Evento1", ThisKey="idEvento", OtherKey="id")]
		public EntitySet<Evento> Evento1
		{
			get
			{
				return this._Evento1;
			}
			set
			{
				this._Evento1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Calendario = this;
		}
		
		private void detach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Calendario = null;
		}
		
		private void attach_Evento1(Evento entity)
		{
			this.SendPropertyChanging();
			entity.Calendario = this;
		}
		
		private void detach_Evento1(Evento entity)
		{
			this.SendPropertyChanging();
			entity.Calendario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class UsuarioAmigo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nombreUsuario;
		
		private string _amigo;
		
		private string _fechaEnlace;
		
		private EntitySet<Usuario> _Usuario1;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OnamigoChanging(string value);
    partial void OnamigoChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public UsuarioAmigo()
		{
			this._Usuario1 = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario1), new Action<Usuario>(this.detach_Usuario1));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", CanBeNull=false, IsPrimaryKey=true)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amigo", CanBeNull=false, IsPrimaryKey=true)]
		public string amigo
		{
			get
			{
				return this._amigo;
			}
			set
			{
				if ((this._amigo != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnamigoChanging(value);
					this.SendPropertyChanging();
					this._amigo = value;
					this.SendPropertyChanged("amigo");
					this.OnamigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fechaEnlace", Storage="_fechaEnlace", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._fechaEnlace;
			}
			set
			{
				if ((this._fechaEnlace != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._fechaEnlace = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioAmigo_Usuario", Storage="_Usuario1", ThisKey="nombreUsuario", OtherKey="nombreUsuario")]
		public EntitySet<Usuario> Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				this._Usuario1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioAmigo", Storage="_Usuario", ThisKey="amigo", OtherKey="nombreUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UsuarioAmigo.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UsuarioAmigo.Add(this);
						this._amigo = value.nombreUsuario;
					}
					else
					{
						this._amigo = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioAmigo1 = this;
		}
		
		private void detach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioAmigo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Baneo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Administrador;
		
		private string _baneado;
		
		private string _fecha;
		
		private string _id;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntitySet<Administrador> _Administrador1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdministradorChanging(string value);
    partial void OnAdministradorChanged();
    partial void OnbaneadoChanging(string value);
    partial void OnbaneadoChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    #endregion
		
		public Baneo()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Administrador1 = new EntitySet<Administrador>(new Action<Administrador>(this.attach_Administrador1), new Action<Administrador>(this.detach_Administrador1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", CanBeNull=false)]
		public string Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this.OnAdministradorChanging(value);
					this.SendPropertyChanging();
					this._Administrador = value;
					this.SendPropertyChanged("Administrador");
					this.OnAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baneado", CanBeNull=false)]
		public string baneado
		{
			get
			{
				return this._baneado;
			}
			set
			{
				if ((this._baneado != value))
				{
					this.OnbaneadoChanging(value);
					this.SendPropertyChanging();
					this._baneado = value;
					this.SendPropertyChanged("baneado");
					this.OnbaneadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fecha", Storage="_fecha", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baneo_Usuario", Storage="_Usuario", ThisKey="baneado", OtherKey="nombreUsuario")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Baneo_Administrador", Storage="_Administrador1", ThisKey="Administrador", OtherKey="nombre")]
		public EntitySet<Administrador> Administrador1
		{
			get
			{
				return this._Administrador1;
			}
			set
			{
				this._Administrador1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Baneo = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Baneo = null;
		}
		
		private void attach_Administrador1(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.Baneo = this;
		}
		
		private void detach_Administrador1(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.Baneo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UsuarioCreador;
		
		private string _Nombre;
		
		private string _descripcion;
		
		private string _imagen;
		
		private string _CreateDate;
		
		private EntityRef<Chat> _Chat;
		
		private EntityRef<Tblero> _Tblero;
		
		private EntityRef<ListaGrupo> _ListaGrupp;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsuarioCreadorChanging(string value);
    partial void OnUsuarioCreadorChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnimagenChanging(string value);
    partial void OnimagenChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Grupo()
		{
			this._Chat = default(EntityRef<Chat>);
			this._Tblero = default(EntityRef<Tblero>);
			this._ListaGrupp = default(EntityRef<ListaGrupo>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if ((this._Tblero.HasLoadedOrAssignedValue || this._ListaGrupp.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioCreador", CanBeNull=false)]
		public string UsuarioCreador
		{
			get
			{
				return this._UsuarioCreador;
			}
			set
			{
				if ((this._UsuarioCreador != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioCreadorChanging(value);
					this.SendPropertyChanging();
					this._UsuarioCreador = value;
					this.SendPropertyChanged("UsuarioCreador");
					this.OnUsuarioCreadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagen")]
		public string imagen
		{
			get
			{
				return this._imagen;
			}
			set
			{
				if ((this._imagen != value))
				{
					this.OnimagenChanging(value);
					this.SendPropertyChanging();
					this._imagen = value;
					this.SendPropertyChanged("imagen");
					this.OnimagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Chat", Storage="_Chat", ThisKey="Id", OtherKey="grupo", IsUnique=true, IsForeignKey=false)]
		public Chat Chat
		{
			get
			{
				return this._Chat.Entity;
			}
			set
			{
				Chat previousValue = this._Chat.Entity;
				if (((previousValue != value) 
							|| (this._Chat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chat.Entity = null;
						previousValue.Grupo1 = null;
					}
					this._Chat.Entity = value;
					if ((value != null))
					{
						value.Grupo1 = this;
					}
					this.SendPropertyChanged("Chat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tblero_Grupo", Storage="_Tblero", ThisKey="Id", OtherKey="grupo", IsForeignKey=true)]
		public Tblero Tblero
		{
			get
			{
				return this._Tblero.Entity;
			}
			set
			{
				Tblero previousValue = this._Tblero.Entity;
				if (((previousValue != value) 
							|| (this._Tblero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tblero.Entity = null;
						previousValue.Grupo1 = null;
					}
					this._Tblero.Entity = value;
					if ((value != null))
					{
						value.Grupo1 = this;
						this._Id = value.grupo;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Tblero");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ListaGrupo_Grupo", Storage="_ListaGrupp", ThisKey="Id", OtherKey="grupo", IsForeignKey=true)]
		public ListaGrupo ListaGrupo
		{
			get
			{
				return this._ListaGrupp.Entity;
			}
			set
			{
				ListaGrupo previousValue = this._ListaGrupp.Entity;
				if (((previousValue != value) 
							|| (this._ListaGrupp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ListaGrupp.Entity = null;
						previousValue.Grupo1.Remove(this);
					}
					this._ListaGrupp.Entity = value;
					if ((value != null))
					{
						value.Grupo1.Add(this);
						this._Id = value.grupo;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("ListaGrupo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Grupo", Storage="_Usuario", ThisKey="UsuarioCreador", OtherKey="nombreUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Grupo = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Grupo = this;
						this._UsuarioCreador = value.nombreUsuario;
					}
					else
					{
						this._UsuarioCreador = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Chat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _grupo;
		
		private string _CreateDate;
		
		private EntitySet<Mensaje> _Mensaje;
		
		private EntityRef<Grupo> _Grupo1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OngrupoChanging(int value);
    partial void OngrupoChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Chat()
		{
			this._Mensaje = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensaje), new Action<Mensaje>(this.detach_Mensaje));
			this._Grupo1 = default(EntityRef<Grupo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grupo")]
		public int grupo
		{
			get
			{
				return this._grupo;
			}
			set
			{
				if ((this._grupo != value))
				{
					if (this._Grupo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngrupoChanging(value);
					this.SendPropertyChanging();
					this._grupo = value;
					this.SendPropertyChanged("grupo");
					this.OngrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chat_Mensaje", Storage="_Mensaje", ThisKey="id", OtherKey="chat")]
		public EntitySet<Mensaje> Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				this._Mensaje.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Chat", Storage="_Grupo1", ThisKey="grupo", OtherKey="Id", IsForeignKey=true)]
		public Grupo Grupo1
		{
			get
			{
				return this._Grupo1.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo1.Entity;
				if (((previousValue != value) 
							|| (this._Grupo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo1.Entity = null;
						previousValue.Chat = null;
					}
					this._Grupo1.Entity = value;
					if ((value != null))
					{
						value.Chat = this;
						this._grupo = value.Id;
					}
					else
					{
						this._grupo = default(int);
					}
					this.SendPropertyChanged("Grupo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Chat1 = this;
		}
		
		private void detach_Mensaje(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Chat1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EventoSuspendido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _CreateDate;
		
		private string _Administrador;
		
		private int _evento;
		
		private EntitySet<Evento> _Evento1;
		
		private EntitySet<Administrador> _Administrador1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnAdministradorChanging(string value);
    partial void OnAdministradorChanged();
    partial void OneventoChanging(int value);
    partial void OneventoChanged();
    #endregion
		
		public EventoSuspendido()
		{
			this._Evento1 = new EntitySet<Evento>(new Action<Evento>(this.attach_Evento1), new Action<Evento>(this.detach_Evento1));
			this._Administrador1 = new EntitySet<Administrador>(new Action<Administrador>(this.attach_Administrador1), new Action<Administrador>(this.detach_Administrador1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", CanBeNull=false)]
		public string Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this.OnAdministradorChanging(value);
					this.SendPropertyChanging();
					this._Administrador = value;
					this.SendPropertyChanged("Administrador");
					this.OnAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evento")]
		public int evento
		{
			get
			{
				return this._evento;
			}
			set
			{
				if ((this._evento != value))
				{
					this.OneventoChanging(value);
					this.SendPropertyChanging();
					this._evento = value;
					this.SendPropertyChanged("evento");
					this.OneventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventoSuspendido_Evento", Storage="_Evento1", ThisKey="evento", OtherKey="id")]
		public EntitySet<Evento> Evento1
		{
			get
			{
				return this._Evento1;
			}
			set
			{
				this._Evento1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventoSuspendido_Administrador", Storage="_Administrador1", ThisKey="Administrador", OtherKey="nombre")]
		public EntitySet<Administrador> Administrador1
		{
			get
			{
				return this._Administrador1;
			}
			set
			{
				this._Administrador1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evento1(Evento entity)
		{
			this.SendPropertyChanging();
			entity.EventoSuspendido = this;
		}
		
		private void detach_Evento1(Evento entity)
		{
			this.SendPropertyChanging();
			entity.EventoSuspendido = null;
		}
		
		private void attach_Administrador1(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.EventoSuspendido = this;
		}
		
		private void detach_Administrador1(Administrador entity)
		{
			this.SendPropertyChanging();
			entity.EventoSuspendido = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Mensaje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CreateDate;
		
		private string _usuarioOrigen;
		
		private string _texto;
		
		private int _chat;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Chat> _Chat1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnusuarioOrigenChanging(string value);
    partial void OnusuarioOrigenChanged();
    partial void OntextoChanging(string value);
    partial void OntextoChanged();
    partial void OnchatChanging(int value);
    partial void OnchatChanged();
    #endregion
		
		public Mensaje()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Chat1 = default(EntityRef<Chat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuarioOrigen", CanBeNull=false)]
		public string usuarioOrigen
		{
			get
			{
				return this._usuarioOrigen;
			}
			set
			{
				if ((this._usuarioOrigen != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusuarioOrigenChanging(value);
					this.SendPropertyChanging();
					this._usuarioOrigen = value;
					this.SendPropertyChanged("usuarioOrigen");
					this.OnusuarioOrigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_texto", CanBeNull=false)]
		public string texto
		{
			get
			{
				return this._texto;
			}
			set
			{
				if ((this._texto != value))
				{
					this.OntextoChanging(value);
					this.SendPropertyChanging();
					this._texto = value;
					this.SendPropertyChanged("texto");
					this.OntextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chat")]
		public int chat
		{
			get
			{
				return this._chat;
			}
			set
			{
				if ((this._chat != value))
				{
					if (this._Chat1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchatChanging(value);
					this.SendPropertyChanging();
					this._chat = value;
					this.SendPropertyChanged("chat");
					this.OnchatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Mensaje", Storage="_Usuario", ThisKey="usuarioOrigen", OtherKey="nombreUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Mensaje.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Mensaje.Add(this);
						this._usuarioOrigen = value.nombreUsuario;
					}
					else
					{
						this._usuarioOrigen = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chat_Mensaje", Storage="_Chat1", ThisKey="chat", OtherKey="id", IsForeignKey=true)]
		public Chat Chat1
		{
			get
			{
				return this._Chat1.Entity;
			}
			set
			{
				Chat previousValue = this._Chat1.Entity;
				if (((previousValue != value) 
							|| (this._Chat1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chat1.Entity = null;
						previousValue.Mensaje.Remove(this);
					}
					this._Chat1.Entity = value;
					if ((value != null))
					{
						value.Mensaje.Add(this);
						this._chat = value.id;
					}
					else
					{
						this._chat = default(int);
					}
					this.SendPropertyChanged("Chat1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tblero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CreateDate;
		
		private int _nota;
		
		private int _grupo;
		
		private EntitySet<Nota> _Nota1;
		
		private EntityRef<Grupo> _Grupo1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnnotaChanging(int value);
    partial void OnnotaChanged();
    partial void OngrupoChanging(int value);
    partial void OngrupoChanged();
    #endregion
		
		public Tblero()
		{
			this._Nota1 = new EntitySet<Nota>(new Action<Nota>(this.attach_Nota1), new Action<Nota>(this.detach_Nota1));
			this._Grupo1 = default(EntityRef<Grupo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nota", IsPrimaryKey=true)]
		public int nota
		{
			get
			{
				return this._nota;
			}
			set
			{
				if ((this._nota != value))
				{
					this.OnnotaChanging(value);
					this.SendPropertyChanging();
					this._nota = value;
					this.SendPropertyChanged("nota");
					this.OnnotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grupo", IsPrimaryKey=true)]
		public int grupo
		{
			get
			{
				return this._grupo;
			}
			set
			{
				if ((this._grupo != value))
				{
					this.OngrupoChanging(value);
					this.SendPropertyChanging();
					this._grupo = value;
					this.SendPropertyChanged("grupo");
					this.OngrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tblero_Nota", Storage="_Nota1", ThisKey="nota", OtherKey="id")]
		public EntitySet<Nota> Nota1
		{
			get
			{
				return this._Nota1;
			}
			set
			{
				this._Nota1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tblero_Grupo", Storage="_Grupo1", ThisKey="grupo", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Grupo Grupo1
		{
			get
			{
				return this._Grupo1.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo1.Entity;
				if (((previousValue != value) 
							|| (this._Grupo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo1.Entity = null;
						previousValue.Tblero = null;
					}
					this._Grupo1.Entity = value;
					if ((value != null))
					{
						value.Tblero = this;
					}
					this.SendPropertyChanged("Grupo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nota1(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Tblero = this;
		}
		
		private void detach_Nota1(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Tblero = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ListaGrupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _usuario;
		
		private int _grupo;
		
		private string _CreateDate;
		
		private EntitySet<Usuario> _Usuario1;
		
		private EntitySet<Grupo> _Grupo1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OngrupoChanging(int value);
    partial void OngrupoChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    #endregion
		
		public ListaGrupo()
		{
			this._Usuario1 = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario1), new Action<Usuario>(this.detach_Usuario1));
			this._Grupo1 = new EntitySet<Grupo>(new Action<Grupo>(this.attach_Grupo1), new Action<Grupo>(this.detach_Grupo1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", CanBeNull=false, IsPrimaryKey=true)]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grupo", IsPrimaryKey=true)]
		public int grupo
		{
			get
			{
				return this._grupo;
			}
			set
			{
				if ((this._grupo != value))
				{
					this.OngrupoChanging(value);
					this.SendPropertyChanging();
					this._grupo = value;
					this.SendPropertyChanged("grupo");
					this.OngrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", CanBeNull=false)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ListaGrupo_Usuario", Storage="_Usuario1", ThisKey="usuario", OtherKey="nombreUsuario")]
		public EntitySet<Usuario> Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				this._Usuario1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ListaGrupo_Grupo", Storage="_Grupo1", ThisKey="grupo", OtherKey="Id")]
		public EntitySet<Grupo> Grupo1
		{
			get
			{
				return this._Grupo1;
			}
			set
			{
				this._Grupo1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.ListaGrupo = this;
		}
		
		private void detach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.ListaGrupo = null;
		}
		
		private void attach_Grupo1(Grupo entity)
		{
			this.SendPropertyChanging();
			entity.ListaGrupo = this;
		}
		
		private void detach_Grupo1(Grupo entity)
		{
			this.SendPropertyChanging();
			entity.ListaGrupo = null;
		}
	}
}
#pragma warning restore 1591
